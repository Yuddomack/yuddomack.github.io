<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>똑다</title>
    <link>https://yuddomack.github.io/</link>
    
    <atom:link href="https://yuddomack.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>코딩, 공부, 일상</description>
    <pubDate>Fri, 14 Jul 2023 15:23:31 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>DOM을 깨우치다 회고</title>
      <link>https://yuddomack.github.io/books/1/</link>
      <guid>https://yuddomack.github.io/books/1/</guid>
      <pubDate>Fri, 14 Jul 2023 15:23:31 GMT</pubDate>
      
      <description>DOM을 깨우치다에 대한 독서 회고입니다.</description>
      
      
      
      <content:encoded><![CDATA[<h1>DOM을 깨우치다 회고</h1><p><code>DOM을 깨우치다</code>는 HTML 문서가 브라우저를 통해 DOM(Document Object Model)이 Node 인터페이스(<code>Element &gt; HTMLElement &gt; ...</code>)로 구현되는 객체의 tree 집합으로 변환되는 것을 상기시켜주고,<br>모던 웹 프론트엔드 라이브러리/프레임워크가 제공하는 일종의 wrapper object에 익숙해진 우리에게 근본이 무엇인지를 되새기게 만들어준다.<br/><br/></p><img src="https://t1.daumcdn.net/cfile/tistory/255E474F527C69721B"  width="200px" style="margin: 0 auto" /><p><br /><br/>이러나 저러나 이 객체들의 역할은 브라우저가 표현하는 문서들의 상태, 스타일, 이벤트 등을 조작할 수 있게 도와주는 창구 역할을 하고, 그것이 곧 DOM의 본질이 아닌가 싶다.</p><h2 id="1-1회차-독서-회고">1. 1회차 독서 회고</h2><p>아마 2019년에 읽었던 것 같은데 자세히 기억나진 않는다.<br>(이거야 원… 구매내역 조회가 2년까지밖에 안된다…)</p><h2 id="2-2회차-독서-회고">2. 2회차 독서 회고</h2><p>이 책의 주된 내용은 Node 인터페이스로부터 상속되는 다양한 DOM 인터페이스(Element, HTMLElement 등)의 종류와 기능에 대해서 설명하는, 즉 공식문서를 읊어주는 형식에 가까운 느낌이다.</p><p>그래서 내부 메소드에 대한 기능설명 보다는 사소한 이야기들을 캐치하면서 보는게 더 영양가 있을 것 같은데, (뭘 봐야하는지 모를정도로 아직 감각이 생기기 전인 독자라면) 이게 말처럼 쉽지만은 않을 것 같다.</p><h3 id="2-1-가볍게-생각하면서-보기-좋을것들">2-1. 가볍게 생각하면서 보기 좋을것들</h3><ul><li>HTML 문서상 개행, 주석 등도 노드 객체로 변환된다. DOM tree에 불필요한 노드가 많아지면 어떤 영향을 끼칠까? (이론적으로 생각해보면 tree 탐색에 더 많은 시간이 소요될 것이다.)</li><li>innerHTML의 오버헤드 (브라우저에게 문서에 대한 처리를 호출 시점에 요청 &lt;-&gt; fragment를 통한 메모리 상 tree 구축)</li><li>Node를 반환하는 api, Element를 반환하는 api</li><li>라이브 상태 객체를 반환하는 api, 정적 상태 객체를 반환하는 api (정적 상태 객체는 변수 할당 이후에 실제 대상 dom 속성 변경되어도 변수 참조값은 변하지 않는 반면, 라이브 상태 객체는 같은 참조를 갖고있음)</li><li>취소 가능한 이벤트에 대한 인사이트</li></ul>]]></content:encoded>
      
      
      <category domain="https://yuddomack.github.io/categories/%EB%8F%85%EC%84%9C-%ED%9A%8C%EA%B3%A0/">books</category>
      
      
      
      <comments>https://yuddomack.github.io/books/1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>books</title>
      <link>https://yuddomack.github.io/books/</link>
      <guid>https://yuddomack.github.io/books/</guid>
      <pubDate>Wed, 12 Jul 2023 05:15:36 GMT</pubDate>
      
      <description>여러가지 책을 읽고 당시의 감상을 기억하기 위해 기록합니다.</description>
      
      
      
      <content:encoded><![CDATA[<h1>독서 회고</h1><p>책은 우리에게 다양한 가치를 제공합니다.<br>글 속에 담겨있는 지식과 통찰 (+ 문학에서는 언어와 감정 등)은 그 순간 순간에 다양한 영감과 깨달음을 발현합니다.</p><p>하지만 이 모든것을 다 기억하기는 어려운데요. 책을 통해 습득한 지식을 소홀히 하다보니 <code>아는데도 모르는</code> (아 이거 어디서 봤는데 뭐였지?, 어떻게 찾지?) 경우가 종종 생겨나는 것 같습니다.<br>이를 보완하기위해 <code>독서에도 회고가 필요</code>하다고 생각했습니다.</p><p>이 카테고리의 글은 책을 읽고 당시의 감상을 자유양식으로 기록하는 것을 목적으로하며, 한번의 글 작성으로 끝나는 것이 아닌 <b>n회차 독서에 대한 감상평도 update</b> 하도록 합니다.<br>어떤 책은 1년차에 읽을때, 3년차에 읽을때 또 다르게 와닿는 지식들이 있더군요. 이 또한 기록하여 나의 변화를 인지해봅니다.</p><p>(그동안 읽은 책도 많지만 이에 대한 기록은 재독서 이전까지 생략합니다.)</p>]]></content:encoded>
      
      
      <category domain="https://yuddomack.github.io/categories/%EB%8F%85%EC%84%9C-%ED%9A%8C%EA%B3%A0/">books</category>
      
      
      
      <comments>https://yuddomack.github.io/books/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
